AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: dev-aws-eks

Parameters:
  NodeEnv:
    Type: String
    Default: dev
  Region:
    Type: String
    Default: ap-southeast-1
  ProjectName: 
    Type: String
    Default: mybarber
  LambdaRunTime:
    Type: String
    Default: nodejs14.x

# Resources:
  # helloFromLambdaFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Handler: src/handlers/hello-from-lambda.helloFromLambdaHandler
  #     Runtime: nodejs14.x
  #     MemorySize: 128
  #     Timeout: 100
  #     Description: A Lambda function that returns a static string.
  #     Policies:
  #       # Give Lambda basic execution Permission to the helloFromLambda
  #       - AWSLambdaBasicExecutionRole

Resources:
  EKSRole:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/amazon-eks-role.yml'
      Parameters:
        NodeEnv: !Ref NodeEnv
        Region: !Ref Region
        ProjectName: !Ref ProjectName

  EKSCustomVPC:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/amazon-eks-vpc-private-public-subnets.yml'
      Parameters:
        NodeEnv: !Ref NodeEnv
        Region: !Ref Region
        ProjectName: !Ref ProjectName
  
  EKSCluster:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/amazon-eks-cluster.yml' 
      Parameters:
        NodeEnv: !Ref NodeEnv
        Region: !Ref Region
        ProjectName: !Ref ProjectName
        NodeInstanceRoleArn: !GetAtt EKSRole.Outputs.NodeInstanceRoleArn
        eksClusterRoleArn: !GetAtt EKSRole.Outputs.eksClusterRoleArn
        ControlPlaneSecurityGroupId: !GetAtt EKSCustomVPC.Outputs.ControlPlaneSecurityGroupId
        PublicSubnet01Id: !GetAtt EKSCustomVPC.Outputs.PublicSubnet01Id
        PublicSubnet02Id: !GetAtt EKSCustomVPC.Outputs.PublicSubnet02Id

  

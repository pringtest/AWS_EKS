AWSTemplateFormatVersion: '2010-09-09'
Description: Amazon EKS VPC - Private and Public subnets
Parameters:
  NodeEnv:
    Type: String
  Region:
    Type: String
  VpcBlock:
    Type: String
    Default: 192.168.0.0/16
  PublicSubnet01Block:
    Type: String
    Default: 192.168.0.0/18
  PublicSubnet02Block:
    Type: String
    Default: 192.168.64.0/18
  PrivateSubnet01Block:
    Type: String
    Default: 192.168.128.0/18
  PrivateSubnet02Block:
    Type: String
    Default: 192.168.192.0/18
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Worker Network Configuration
      Parameters:
      - VpcBlock
      - PublicSubnet01Block
      - PublicSubnet02Block
      - PrivateSubnet01Block
      - PrivateSubnet02Block
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VpcBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${NodeEnv}-eks-vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public Subnets EKS
      - Key: Network
        Value: Public
  PrivateRouteTable01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Private Subnet EKS 01
      - Key: Network
        Value: Private01
  PrivateRouteTable02:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Private Subnet EKS 02
      - Key: Network
        Value: Private02
  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Public Subnet 01
    Properties:
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PublicSubnet01Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${NodeEnv}-eks-public-subnet01
      - Key: kubernetes.io/role/elb
        Value: 1
  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Public Subnet 02
    Properties:
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PublicSubnet02Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${NodeEnv}-eks-public-subnet02
      - Key: kubernetes.io/role/elb
        Value: 1
  PrivateSubnet01:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Private Subnet 01
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PrivateSubnet01Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${NodeEnv}-eks-private-subnet01
      - Key: kubernetes.io/role/internal-elb
        Value: 1
  PrivateSubnet02:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Private Subnet 02
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PrivateSubnet02Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${NodeEnv}-eks-private-subnet02
      - Key: kubernetes.io/role/internal-elb
        Value: 1
  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet01
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet02
      RouteTableId:
        Ref: PublicRouteTable
  PrivateSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet01
      RouteTableId:
        Ref: PrivateRouteTable01
  PrivateSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet02
      RouteTableId:
        Ref: PrivateRouteTable02
  PublicRoute:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId:
        Ref: InternetGateway
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId:
        Ref: VPC
Outputs:
  PublicSubnet01Id:
    Value:
      Ref: PublicSubnet01
  PublicSubnet02Id:
    Value:
      Ref: PublicSubnet02
  ControlPlaneSecurityGroupId:
    Description: Security group for the cluster control plane communication with worker
      nodes
    Value:
      Fn::GetAtt:
      - ControlPlaneSecurityGroup
      - GroupId

AWSTemplateFormatVersion: "2010-09-09"
Description: Amazon EKS - Cluster

Parameters:
  Organization:
    Type: String
  Project:
    Type: String
  NodeEnv:
    Type: String
  Region:
    Type: String
  NodeInstanceRoleArn:
    Type: String
  EksClusterRoleArn:
    Type: String
  ControlPlaneSecurityGroupId:
    Type: String
  PublicSubnet01Id:
    Type: String
  PublicSubnet02Id:
    Type: String
  # PrivateSubnet01Id:
  #   Type: String
  # PrivateSubnet02Id:
  #   Type: String

Conditions:
  IsDev: !Equals [!Ref NodeEnv, dev]

Resources:
  # create the cluster
  ClusterEks:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub '${NodeEnv}-${Organization}-${Project}-k8s-kluster'
      ResourcesVpcConfig: 
        SecurityGroupIds: 
          - !Ref ControlPlaneSecurityGroupId
        SubnetIds: 
          - !Ref PublicSubnet01Id
          - !Ref PublicSubnet02Id
          # - !Ref PrivateSubnet01Id
          # - !Ref PrivateSubnet02Id
      RoleArn: !Ref EksClusterRoleArn
  
  DefaultNodeGroup:
    DependsOn:
      - ClusterEks
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Ref ClusterEks
      DiskSize: 20
      InstanceTypes: 
        - !If [IsDev, t2.medium, t3.medium] 
      NodegroupName: !Sub '${NodeEnv}-${Organization}-${Project}-default'
      NodeRole: !Ref NodeInstanceRoleArn
      ScalingConfig: 
        DesiredSize: !If [IsDev, 3, 3]
        MaxSize: !If [IsDev, 3, 10]
        MinSize: !If [IsDev, 3, 3]
      Subnets: 
        - !Ref PublicSubnet01Id
        - !Ref PublicSubnet02Id
        # - !Ref PrivateSubnet01Id
        # - !Ref PrivateSubnet02Id